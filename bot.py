import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from dotenv import load_dotenv
import os

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

logging.basicConfig(level=logging.INFO)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

class Form(StatesGroup):
    action = State()
    amount = State()

start_kb = ReplyKeyboardMarkup(resize_keyboard=True)
start_kb.add(KeyboardButton("üí∞ –î–µ–ø–æ–∑–∏—Ç"), KeyboardButton("üì§ –í—ã–≤–æ–¥"))

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=start_kb)

@dp.message_handler(Text(equals=["üí∞ –î–µ–ø–æ–∑–∏—Ç", "üì§ –í—ã–≤–æ–¥"]))
async def choose_action(message: types.Message, state: FSMContext):
    await state.update_data(action=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ USD:")
    await Form.amount.set()

@dp.message_handler(state=Form.amount)
async def get_amount(message: types.Message, state: FSMContext):
    data = await state.get_data()
    action = data['action']
    amount = message.text
    username = message.from_user.username or "–ë–µ–∑ username"
    user_id = message.from_user.id

    action_text = "–î–ï–ü–û–ó–ò–¢" if action == "üí∞ –î–µ–ø–æ–∑–∏—Ç" else "–í–´–í–û–î"

    msg = f"üì¨ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ {action_text}\nüë§ –ò–≥—Ä–æ–∫: @{username} (ID: {user_id})\nüíµ –°—É–º–º–∞: ${amount}"

    buttons = InlineKeyboardMarkup().add(
        InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm"),
        InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data="decline")
    )

    await bot.send_message(ADMIN_ID, msg, reply_markup=buttons)
    await message.answer("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–∞—Å—Å–∏—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")
    await state.finish()

@dp.callback_query_handler(Text(equals=["confirm", "decline"]))
